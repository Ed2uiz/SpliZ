{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/spliz/master/nextflow_schema.json",
    "title": "nf-core/spliz pipeline parameters",
    "description": "Code to calculate the Splicing Z Score (SZS) for single cell RNA-seq splicing analysis",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "dataname": {
                    "type": "string",
                    "description": "Name identifier of the SpliZ run"
                },
                "input_file": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Input parquet or tsv file"
                },
                "outdir": {
                    "type": "string",
                    "description": "Output directory for results",
                    "default": "./results/${params.dataname}",
                    "hidden": true
                },
                "SICILIAN": {
                    "type": "boolean",
                    "description": "Is the input file SICILIAN output?"
                },
                "pin_S": {
                    "type": "number",
                    "description": "Bound splice site residuals at this quantile (e.g. values in the lower pin_S quantile and the upper 1 - pin_S quantile will be rounded to the quantile limits)"
                },
                "pin_z": {
                    "type": "number",
                    "description": "Bound SpliZ scores at this quantile (e.g. values in the lower pin_z quantile and the upper 1 - pin_z quantile will be rounded to the quantile limits)"
                },
                "bounds": {
                    "type": "integer",
                    "description": "Only include cell/gene pairs that have more than this many junctional reads for the gene"
                },
                "light": {
                    "type": "boolean",
                    "description": "Output the minimum number of columns",
                    "default": true
                },
                "svd_type": {
                    "type": "string",
                    "description": "Type of SVD calculation"
                },
                "grouping_level_1": {
                    "type": "string",
                    "description": "Column to partition data by"
                },
                "grouping_level_2": {
                    "type": "string",
                    "description": "Column to group data by"
                },
                "n_perms": {
                    "type": "integer",
                    "description": "Number of permutations"
                },
                "annotator_pickle": {
                    "type": "string",
                    "description": "Annotator pickle file"
                },
                "exon_pickle": {
                    "type": "string",
                    "description": "Exon pickle file"
                },
                "splice_pickle": {
                    "type": "string",
                    "description": "Splice pickle file"
                },
                "libraryType": {
                    "type": "string",
                    "description": "Options: 10X (for 10X chromium), SS2 (for Smart-seq2), and SLS (for Slide-seq or Slide-seq2)"
                },
                "gtf": {
                    "type": "string",
                    "description": "GTF annotation file"
                },
                "rank_quant": {
                    "type": "number",
                    "description": "Bound SpliZ ranks for each donor/acceptor at this quantile (e.g. values in the lower rank_quant quantile and the upper 1 - rank_quant quantile will be rounded to the quantile limits)"
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "run_analysis": {
                    "type": "boolean",
                    "description": "Run analysis steps?"
                },
                "samplesheet": {
                    "type": "string"
                },
                "meta": {
                    "type": "string",
                    "description": "Metadata file containing entries for each barcode/grouping_col_1/grouping_col_2 combination"
                }
            },
            "required": [
                "dataname"
            ]
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ],
    "properties": {
        "publish_dir_mode": {
            "type": "string",
            "default": "copy",
            "hidden": true,
            "description": "Method used to save pipeline results to output directory.",
            "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
            "fa_icon": "fas fa-copy",
            "enum": [
                "symlink",
                "rellink",
                "link",
                "copy",
                "copyNoFollow",
                "move"
            ]
        },
        "validate_params": {
            "type": "boolean",
            "description": "Boolean whether to validate parameters against the schema at runtime",
            "default": true,
            "fa_icon": "fas fa-check-square",
            "hidden": true
        },
        "email_on_fail": {
            "type": "string",
            "description": "Email address for completion summary, only when pipeline fails.",
            "fa_icon": "fas fa-exclamation-triangle",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
            "hidden": true,
            "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
        },
        "plaintext_email": {
            "type": "boolean",
            "description": "Send plain-text email instead of HTML.",
            "fa_icon": "fas fa-remove-format",
            "hidden": true,
            "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
        },
        "max_multiqc_email_size": {
            "type": "string",
            "description": "File size limit when attaching MultiQC reports to summary emails.",
            "default": "25.MB",
            "fa_icon": "fas fa-file-upload",
            "hidden": true,
            "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
        },
        "monochrome_logs": {
            "type": "boolean",
            "description": "Do not use coloured log outputs.",
            "fa_icon": "fas fa-palette",
            "hidden": true,
            "help_text": "Set to disable colourful command line output and live life in monochrome."
        },
        "multiqc_config": {
            "type": "string",
            "description": "Custom config file to supply to MultiQC.",
            "fa_icon": "fas fa-cog",
            "hidden": true
        },
        "tracedir": {
            "type": "string",
            "description": "Directory to keep pipeline Nextflow logs and reports.",
            "default": "${params.outdir}/pipeline_info",
            "fa_icon": "fas fa-cogs",
            "hidden": true
        },
        "email": {
            "type": "string"
        },
        "igenomes_base": {
            "type": "string",
            "default": "s3://ngi-igenomes/igenomes"
        },
        "igenomes_ignore": {
            "type": "string"
        },
        "show_hidden_params": {
            "type": "string"
        },
        "genome": {
            "type": "string"
        }
    }
}